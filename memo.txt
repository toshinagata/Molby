2010.1.25.
  AmberTools1.3 をバンドルする方向で検討中。antechamber と sqm だけあればいいはず。

config.h, Makefile_at を手動で修正。
src ディレクトリの中で、antechamber, blas, carpack, cblas, clapack, etc, f2c, include, lapack, lib, sff, sqm を残し、他は削除する。

make -f Makefile_at でビルド。
なお、Mac 用の gfortran は http://r.research.att.com/tools/ にあるやつがいい。hpc.sourceforge.net のやつはいろいろと使い方が複雑。
OS 10.4 用のユニバーサルバイナリは、export ISYSROOT='-isysroot /Developer/SDKs/MacOSX10.4u.sdk -mmacosx-version-min=10.4 -arch ppc -arch i386' としたあと make -f Makefile_at とすると作ることができる。MacBook 上でビルドして、PowerPC の 10.4 に持って行っても実行できたので、たぶん大丈夫じゃないかと。
原子タイプのアサインだけなら、antechamber を -c オプション無しで走らせればいいんだな。気がついてなかった。（どれぐらい使えるのかは不明だが。）

2010.2.2.
  MD/Minimize のサブスレッドの処理を整理（よくフリーズしていたので）。
  サブスレッドから MM/MD をしているときは、指定したステップが終わるごとにリングバッファに座標データをためこみ、メインスレッドにイベントを投げる。メインスレッドはイベントを捕まえて、リングバッファから座標データを読み込んで、フレームを作成する。サブスレッドから Molecule を直接触ることがなくなったので、少しは安定すると期待しよう。また、ドキュメントを閉じるときにサブスレッドが走っている時は、エラーメッセージを出して閉じるのを拒否するようにした。

2010.2.21.
  Ruby の Parameter/ParEnumerable の仕様がわかりにくい。グローバルパラメータを自動的に探しに行く機能はどこかにまとめた方がいい。クラスメソッドで実装するか？
  Parameter#lookup(molecule, par_type, atom_type_string, *options)
# インスタンスメソッドで呼ばれたらローカル→グローバルと探索、クラスメソッドで呼ばれたらグローバルのみ、とするか？
  Parameter#bond などで、原子タイプからの探索はやめにする。探索はあくまでも lookup で。


